using System;
using System.Collections.Generic;
using System.Linq;
using static ProjectEuler.Common.Numerology;

namespace ProjectEuler.Problems
{
    // Pentagonal numbers are generated by the formula, Pn = n(3n−1) / 2. The first ten pentagonal numbers are:
    //
    // 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    //
    // It can be seen that P4 +P7 = 22 + 70 = 92 = P8.However, their difference, 70 − 22 = 48, is not pentagonal.
    //
    // Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and 
    // D = | Pk − Pj | is minimised; what is the value of D ?

    public class Euler045 : IEulerProblem
    {
        public string Result()
        {
            return run().ToString();
        }

        private static long run()
        {
            // All hexagonal numbers are also triangle numbers, so no need to test that.
            long number = 0;

            // Starting index is 144 for creating hexagonal numbers:
            for(int n = 144; number >= 0; n++)
            {
                number = n * (2 * n - 1);
                if (IsPentagonal(number)) { return number; }
            }
            return -1;
        }
    }
}
